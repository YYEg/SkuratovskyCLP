from scipy.optimize import linprog
#общие переменные
bnd = [(0, float("inf")),  # ОДЗ x1
       (20, 20),           # ОДЗ x2
       (0, float("inf")),  # ОДЗ x3
       (0, float("inf")),  # ОДЗ x4
       (2, 3)]             # ОДЗ x5
f = [1, 1, 1, 1, 1]  # Коэффиценты при x у целевой функции
A = [[-1, -3, -5, -7, -9],  # коэффициенты при х для первого ограничения
     [-4, -3, -2, -1, -0]]  # коэффициенты при х для второго ограничения




# --ЛП 0--#
def Zero():
    f = [1, 1, 1, 1, 1]  # Коэффиценты при x у целевой функции
    A = [[-1, -3, -5, -7, -9],  # коэффициенты при х у первого ограничения
         [-4, -3, -2, -1, -0]]  # коэффициенты при х у второго ограничения
    B = [-85, -60]  # Ограничения ограничений :p
    bnd0 = [(0, float("inf")),  # ОДЗ x1
            (0, float("inf")),  # ОДЗ x2
            (0, float("inf")),  # ОДЗ x3
            (0, float("inf")),  # ОДЗ x4
            (0, float("inf"))]  # ОДЗ x5
    opt_func_lp_0 = linprog(c=f, A_ub=A, b_ub=B, bounds=bnd, method="highs")  # оптимизация
    print(opt_func_lp_0)
    print(
        "\n------------------------------------------------------------------------------------------------------------------\n")
    # fun: 22.777777777777786
    # x: array([0,20.,0., 0.,2.7])
    # x2 <= 20    x5 <= 2
    # x2 >= 20    x5 <= 2


# ЛП 1 – НИЖНЯЯ ГРАНИЦА
def First():
    f = [1, 1, 1, 1, 1]  # Коэффиценты при x у целевой функции
    A = [[-1, -3, -5, -7, -9],  # коэффициенты при х у первого ограничения
         [-4, -3, -2, -1, -0]]  # коэффициенты при х у второго ограничения
    B = [-85, -60]  # Ограничения ограничений :p
    bnd = [(0, float("inf")),  # ОДЗ x1
           (0, 20),  # ОДЗ x2
           (0, float("inf")),  # ОДЗ x3
           (0, float("inf")),  # ОДЗ x4
           (0, 2)]  # ОДЗ x5
    opt_func_lp_1 = linprog(c=f, A_ub=A, b_ub=B, bounds=bnd, method="highs")  # оптимизация
    print(opt_func_lp_1)
    print(
        "\n--------------------------------------------------------------------------------------------------------------\n")
    # fun: 22.77777777777778
    # x: array([0.,18.4,2.3,0.,2.])


# ЛП 2
def Second():
    f = [1, 1, 1, 1, 1]  # Коэффиценты при x у целевой функции
    A = [[-1, -3, -5, -7, -9],  # коэффициенты при х у первого ограничения
         [-4, -3, -2, -1, -0]]  # коэффициенты при х у второго ограничения
    B = [-85, -60]  # Ограничения ограничений :p
    bnd = [(0, float("inf")),  # ОДЗ x1
           (20, float("inf")),  # ОДЗ x2
           (0, float("inf")),  # ОДЗ x3
           (0, float("inf")),  # ОДЗ x4
           (0, 2)]  # ОДЗ x5
    opt_func_lp_2 = linprog(c=f, A_ub=A, b_ub=B, bounds=bnd, method="highs")  # оптимизация
    print(opt_func_lp_2)
    print(
        "\n--------------------------------------------------------------------------------------------------------------\n")

    # fun: 23
    # x: array([0.,20.,0.,1.,2.])


# Вызов ЛП решений
Zero()

First()
Second()